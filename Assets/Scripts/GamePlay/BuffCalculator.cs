using System.Collections;
using System.Collections.Generic;
using UnityEngine;

//buff??????,???????buff???��?????????????
//buff????????????,?????????,???��????????????????????,????????????????????????????(????��??)
//???????��?????��??,???????????,??????
//final=[(source+addon1)*multiplier1+addon2]*multiplier2+addOn3

//???????????????,??��???calculator???????????,?????��???��?????????,??????????...
public class BuffCalculator : MonoBehaviour
{
    private WeaponBasic basic;
    public Dictionary<CalculateItem, float> BuffMap;
    // Start is called before the first frame update
    void Awake()
    {
        basic = GetComponent<WeaponBasic>();
        BuffMap = new Dictionary<CalculateItem, float>();
        timers = new List<BuffTimer>();
    }

    // Update is called once per frame
    void Update()
    {
        for(int i = 0; i < timers.Count; i++)
        {
            BuffTimer temp = timers[i];
            temp.time -= Time.deltaTime;
            if (temp.time < 0)
            {
                if (temp.isAddon)
                {
                    addParam(temp.item, -temp.value);
                    timers.Remove(temp);
                }
                else
                {
                    multiplyParam(temp.item, -temp.value);
                    timers.Remove(temp);
                }
                refreshAttr(temp.item);
            }
        }
    }

    public List<BuffTimer> timers;

    /// <summary>
    /// ????????,?????????????????
    /// </summary>
    /// <returns></returns>
    public float calculateFloat(float source,CalculateItem[] items)
    {
        float final=source;
        //?????????????????��??????,???????????????
        //????Item??value?��???multiplier????addon
        foreach(CalculateItem item in items)
        {
            if (item.GetHashCode() > 100&& item.GetHashCode() <200 && BuffMap.ContainsKey(item))//addon
            {
                final += BuffMap[item];
            }
            else if(item.GetHashCode() < 100 && BuffMap.ContainsKey(item))
            {
                if (BuffMap[item] >= 0)
                    final *= BuffMap[item];
                else
                    final /= -BuffMap[item];
            }
        }
        return final;
    }

    public void addParam(CalculateItem item,float value)
    {
        if (!BuffMap.ContainsKey(item))
        {
            if (item.GetHashCode() > 100)
                BuffMap.Add(item, 0);
            else if (item.GetHashCode() < 100)
                BuffMap.Add(item, 1);
        }
        BuffMap[item] += value;
    }

    //????????????,???��???
    public float? getItem(CalculateItem item)
    {
        if (BuffMap.ContainsKey(item)) return BuffMap[item];
        else return null;
    }

    //?????????,??????????buff??
    public void setParam(CalculateItem item,int value)
    {
        if (!BuffMap.ContainsKey(item))
        {
            BuffMap.Add(item, value);
        }
        else
        {
            BuffMap[item] = value;
        }
    }

    public void multiplyParam(CalculateItem item,float value)//??????,???value<0,??????????????????????????
    {
        if (!BuffMap.ContainsKey(item))
        {
            if (item.GetHashCode() > 100)
                BuffMap.Add(item, 0);
            else if (item.GetHashCode() < 100)
                BuffMap.Add(item, 1);
        }
        if (value >= 0)
        {
            if (BuffMap.ContainsKey(item)) BuffMap[item] *= value;
        }
        else
        {
            if (BuffMap.ContainsKey(item)) BuffMap[item] /= -value;
        }
    }

    //???buff,????????????obj??????????;
    public void clearBuff()
    {
        if(BuffMap!=null)
            BuffMap.Clear();
        if (timers != null)
            timers.Clear();
    }

    //????????
    public void addTimer(BuffTimer timer)
    {
        timers.Add(timer);
        if (timer.isAddon)
        {
            addParam(timer.item, timer.value);
        }
        else
        {
            multiplyParam(timer.item, timer.value);
        }
        refreshAttr(timer.item);
    }

    public void refreshAttr(CalculateItem item)
    {
        switch (item)
        {
            case CalculateItem.ATTACK_ADDON:
            case CalculateItem.ATTACK_FINALM:
            case CalculateItem.ATTACK_MULTIPLIER:
                basic.setDamage();
                break;
            case CalculateItem.ATTACK_SPEED_FINALM:
            case CalculateItem.ATTACK_SPEED_MULTIPLIER:
                break;
            case CalculateItem.SPEED_ADDON:
            case CalculateItem.SPEED_FINALM:
            case CalculateItem.SPEED_MULTIPLIER:
                basic.setMoveSpeed();
                break;
            //?��????
        }
    }
}

public class BuffTimer
{
    public CalculateItem item;
    public float value;
    public float time;
    public bool isAddon;//????????,??????????????

    public BuffTimer(CalculateItem item,float value,float time,bool isAddon)
    {
        this.item = item;
        this.value = value;
        this.time = time;
        this.isAddon = isAddon;
    }
}

//multiplier?????,addon?????,finalm?????????,????????
public enum CalculateItem
{
    ATTACK_MULTIPLIER       =0,         //????
    SPEED_MULTIPLIER        =1,         //????
    DEFENCE_MULTIPLIER      =2,         //????
    RANGE_MULTIPLIER        =3,         //??????��
    DETECTOR_MULTIPLIER     =4,         //???��
    ATTACK_SPEED_MULTIPLIER =5,         //????
    RELOAD_TIME_MULTIPLIER  =6,         //???????
    ARMOR_PIERCE_MULTIPLIER =7,         //????
    HP_MULTIPLIER           =8,         //???????
    HEAL_MULTIPLIER         =9,         //??????
    MAGIC_DEFENCE_MULTIPLIER=10,        //????????
    MAGIC_ATTACK_MULTIPLIER =11,        //????????
    MAGIC_ARMOR_PIERCE_MULTIPLIER =12,  //????????
    DAMAGE_REDUCTION = 21,        //???????
    //DAMAGE_RECIEVE          =22,        //????,??????????????????????

    ATTACK_FINALM           =51,        //???????????
    SPEED_FINALM            =52,        //???????????
    DEFENCE_FINALM          =53,        //???????????
    RANGE_FINALM            =54,        //??????��???????
    ATTACK_SPEED_FINALM     =55,        //???????????
    RELOAD_TIME_FINALM      =56,        //??????????????
    DETECTOR_FINALM         =57,        //???��???????
    HP_FINALM               =58,        //??????????????
    HEAL_FINALM             =59,        //?????????????
    MAGIC_DEFENCE_FINALM    =60,        //??????????????
    MAGIC_ATTACK_FINALM     =61,        //??????????????

    ATTACK_ADDON = 101,       //???? ???
    SPEED_ADDON             =102,       //???? ???
    DEFENCE_ADDON           =103,       //???? ???
    ARMOR_PIERCE_ADDON      =104,       //???? ???
    HP_ADDON                =105,       //??????? ???
    MAGIC_DEFENCE_ADDON     =106,       //??????? ???
    MAGIC_ATTACK_ADDON      =107,       //??????? ???
    MAGIC_ARMOR_PIERCE_ADDON =108, //??????? ???
    FREE_AMMO = 201,       //???????? ????
}